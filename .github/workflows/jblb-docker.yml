name: Django CI/CD with Docker

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: jblb_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DJANGO_SETTINGS_MODULE: jblb_backend.settings
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: jblb_db
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/jblb_db
      SECRET_KEY: test_secret_key
      DEBUG: "1"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint Code
        run: |
          pip install flake8
          flake8 .

      - name: Run Tests
        run: |
          python manage.py migrate
          python manage.py test --verbosity=2

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build-test
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/jblb-backend:latest
            ghcr.io/${{ github.repository_owner }}/jblb-backend:${{ github.run_number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Print Docker Image URL
        run: echo "âœ… Image pushed to ghcr.io/${{ github.repository_owner }}/jblb-backend"
